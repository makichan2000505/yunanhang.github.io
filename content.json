[{"title":"克隆数组","slug":null,"date":"2016-05-21T12:33:44.000Z","updated":null,"comments":null,"path":"2016/05/21/克隆数组/","link":null,"permalink":null,"excerpt":null,"keywords":null,"text":"1.浅表克隆1234567891011121314var person = new Person();var person.sex=&quot;male&quot;;var person.age=28;//创建一个新数组var oArray =[&quot;tom&quot;,person];var newArray = oArray.concat();//调用concat函数，返回一个新的数组对象.同样也可用slice函数document.write(oArray[1].age);//28document.write(newArray[1].age);//28person.age = 29;document.write(oArray[1].age);//29document.write(newArray[1].age);//29oArray[1].age = 30;document.write(person.age);//30document.write(newArray[1].age);//30 浅表克隆操作的是同一个引用 2.深度克隆123456/***@param _array 被克隆的数组*@param deep 定义是否深度克隆*@return Array 返回克隆的数组*@throws Error 参数数量不正确**/ 深度克隆，不断进行索引，复制原始数组中的所有对象，从而使新数组不再和原始数组指向同一个引用12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061function cloneArray(_array,deep)&#123; //如果参数数量为1，为浅表克隆 if(arguments.length==1) &#123; var isdeep=false; &#125; //否则为深表克隆 else if&#123; var isdeep = deep; &#125; //否则抛出报错 else&#123; throw new Error(&quot;参数数量不正确&quot;); return; &#125; //判断被克隆数组是否是数组对象，若是，返回[]，否则返回&#123;&#125;,并把返回值传给变量newArray var newArray = _array instanceof Array?[]:&#123;&#125;; if(isdeep) /*如果是深度克隆*/ &#123; //首先遍历该数组 for(var i in _array) &#123; var prop = _array[i];/*把数组里的元素指向变量prop*/ if(typeof prop ==&apos;object&apos;)/*如果该元素为对象*/ &#123; if(prop instanceof Array)/*如果该元素为数组对象，也就是数组中的数组,就要用push函数*/ &#123; var newArray[i] = [];/*创建数组newArray*/ for(var j = 0;j&lt;prop.length;j++)&#123; if(typeof prop[j]!=&apos;object&apos;)/*for循环里再次判断该数组里的元素是否为对象*/ &#123; newArray[i].push(prop[j]);/*如果不是对象了，就可以直接把元素push进newArray*/ &#125; else &#123; newArray[i].push(cloneArray(prop[j],true));/*如果还是对象，那就再次调用cloneArray函数进行递归，处理该对象并push进newArray*/ &#125; &#125; &#125; else /*如果是不是数组对象，而是其他类型的对象，不用push*/ &#123; newArray[i] = cloneArray(prop.true); &#125; &#125; else /*如果该元素不是对象*/ &#123; newArray[i] = prop; &#125; &#125; &#125; else /*如果不是深度克隆*/ &#123; newArray = _array.concat(); &#125; return newArray;&#125; 测试123456789101112131415//创建一个复杂数据类型作为数组元素var person = new Object();person.sex = &quot;male&quot;person.age = 28;var oArray =[&quot;jack&quot;,person];//克隆var newArray = cloneArray(oArray,true);document.write(oArray[1].age);/*28*/document.write(newArray[1].age);/*28*///改变指向的对象person.age = 27;document.write(oArray[1].age);/*27*/document.write(newArray[1].age);/*28*/ 3.深度克隆意义复制一个对象，改变原对象的属性，克隆的对象不受影响。例如在游戏引擎中，复制出一个模型，改变克隆出的模型的长宽高不会影响原模型的长宽高，这时就会用到深度克隆。","raw":null,"content":null,"categories":null,"tags":[]}]